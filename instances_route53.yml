- name: creating instances and route53
  connection: local
  hosts: local
  vars:
    ami_id: ami-09c813fb71547fc4f
    sg_id: sg-0b119592ed33e5705 # replace with your SG ID
    zone_id: Z05515612OU5U0TGKWIRY # replace with your ID
    domain_name: "eshwar.fun"
    # instances: ['mongodb']
  tasks:
  - name: start an instance with a public IP address
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: t3.micro
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
      tags:
        Name: "{{ item }}"
    loop: "{{ instances }}"
    register: ec2_output

  # - name: print the ec2_output
  #   ansible.builtin.debug:
  #     msg: "{{ ec2_output }}"

  # - name: For public IP
  #   ansible.builtin.debug:
  #     msg: "{{ item.instances[0].public_ip_address }}"
  #   loop: "{{ ec2_output.results }}"
  # - name: For private IP
  #   ansible.builtin.debug:
  #     msg: "{{ item.instances[0].private_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  - name: creating route 53
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ item.item }}.{{ domain_name }}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      overwrite: true
    loop: "{{ ec2_output.results }}"

  # we are creating one record with public only for frontend
  - name: create route53 record for frontend
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ domain_name }}" # eshwar.fun
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      overwrite: true
    when: item.item == "frontend"
    loop: "{{ ec2_output.results }}"

  

